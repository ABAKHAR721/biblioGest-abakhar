<!-- Styles/Styles.xaml - Complete #CC6666 Unified Color Theme -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:System="clr-namespace:System;assembly=mscorlib">

	<!-- Color Palette - UNIFIED #CC6666 THEME -->
	<SolidColorBrush x:Key="BaseRed" Color="#CC6666"/>
	<!-- Your preferred base red -->
	<SolidColorBrush x:Key="DarkerRed" Color="#A05252"/>
	<!-- A darker shade of #CC6666 for hover/accents -->

	<!-- All main colors now point to the red tones -->
	<SolidColorBrush x:Key="PrimaryBrush" Color="{Binding Source={StaticResource BaseRed}, Path=Color}"/>
	<SolidColorBrush x:Key="PrimaryDarkBrush" Color="{Binding Source={StaticResource DarkerRed}, Path=Color}"/>
	<SolidColorBrush x:Key="SecondaryBrush" Color="{Binding Source={StaticResource BaseRed}, Path=Color}"/>
	<SolidColorBrush x:Key="SecondaryDarkBrush" Color="{Binding Source={StaticResource DarkerRed}, Path=Color}"/>
	<SolidColorBrush x:Key="DangerBrush" Color="{Binding Source={StaticResource BaseRed}, Path=Color}"/>
	<SolidColorBrush x:Key="DangerDarkBrush" Color="{Binding Source={StaticResource DarkerRed}, Path=Color}"/>

	<SolidColorBrush x:Key="BackgroundPrimaryBrush" Color="#F5F5F5"/>
	<!-- Very Light Gray (unchanged) -->
	<SolidColorBrush x:Key="BackgroundCardBrush" Color="#FFFFFF"/>
	<!-- White (unchanged) -->
	<SolidColorBrush x:Key="TextPrimaryBrush" Color="#333333"/>
	<!-- Dark Gray (unchanged) -->
	<SolidColorBrush x:Key="TextSecondaryBrush" Color="#555555"/>
	<!-- Medium Gray (unchanged) -->
	<SolidColorBrush x:Key="BorderBrush" Color="#E0E0E0"/>
	<!-- Light Gray Border (unchanged) -->

	<FontFamily x:Key="BaseFont">Segoe UI</FontFamily>

	<!-- Styles below use the brushes defined above -->

	<Style TargetType="TextBlock">
		<Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
		<Setter Property="FontFamily" Value="{StaticResource BaseFont}"/>
		<Setter Property="FontSize" Value="12"/>
	</Style>

	<Style TargetType="TextBlock" x:Key="TitleStyle" BasedOn="{StaticResource {x:Type TextBlock}}">
		<Setter Property="FontSize" Value="24"/>
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="Margin" Value="0,0,0,20"/>
		<Setter Property="Foreground" Value="{StaticResource PrimaryDarkBrush}"/>
		<!-- Uses DarkerRed -->
	</Style>

	<Style TargetType="TextBlock" x:Key="SubtitleStyle" BasedOn="{StaticResource {x:Type TextBlock}}">
		<Setter Property="FontSize" Value="18"/>
		<Setter Property="FontWeight" Value="SemiBold"/>
		<Setter Property="Margin" Value="0,10,0,10"/>
		<Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
	</Style>

	<Style TargetType="TextBlock" x:Key="LabelStyle" BasedOn="{StaticResource {x:Type TextBlock}}">
		<Setter Property="FontSize" Value="12"/>
		<Setter Property="FontWeight" Value="SemiBold"/>
		<Setter Property="Margin" Value="0,0,0,2"/>
		<Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}"/>
	</Style>

	<Style TargetType="TextBox">
		<Setter Property="Height" Value="30"/>
		<Setter Property="Margin" Value="0,5"/>
		<Setter Property="Padding" Value="5,0,5,0"/>
		<Setter Property="Background" Value="{StaticResource BackgroundCardBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="FontFamily" Value="{StaticResource BaseFont}"/>
		<Setter Property="FontSize" Value="12"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TextBox">
					<Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="5">
						<ScrollViewer x:Name="PART_ContentHost"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- ComboBox and DatePicker styles are still removed -->

	<Style TargetType="Button">
		<Setter Property="Height" Value="35"/>
		<Setter Property="Margin" Value="5"/>
		<Setter Property="Padding" Value="15,0"/>
		<Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
		<!-- Uses BaseRed -->
		<Setter Property="Foreground" Value="{StaticResource BackgroundCardBrush}"/>
		<Setter Property="FontWeight" Value="SemiBold"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="6">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{StaticResource PrimaryDarkBrush}"/>
				<!-- Uses DarkerRed for hover -->
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Background" Value="{StaticResource BorderBrush}"/>
				<Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}"/>
				<Setter Property="Cursor" Value="Arrow"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="Button" x:Key="AddButtonStyle" BasedOn="{StaticResource {x:Type Button}}">
		<Setter Property="Background" Value="{StaticResource SecondaryBrush}"/>
		<!-- Uses BaseRed -->
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{StaticResource SecondaryDarkBrush}"/>
				<!-- Uses DarkerRed -->
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Background" Value="{StaticResource BorderBrush}"/>
				<Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}"/>
				<Setter Property="Cursor" Value="Arrow"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="Button" x:Key="DeleteButtonStyle" BasedOn="{StaticResource {x:Type Button}}">
		<Setter Property="Background" Value="{StaticResource DangerBrush}"/>
		<!-- Uses BaseRed -->
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{StaticResource DangerDarkBrush}"/>
				<!-- Uses DarkerRed -->
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Background" Value="{StaticResource BorderBrush}"/>
				<Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}"/>
				<Setter Property="Cursor" Value="Arrow"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="DataGrid">
		<Setter Property="Background" Value="{StaticResource BackgroundCardBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="RowBackground" Value="Transparent"/>
		<Setter Property="AlternatingRowBackground" Value="#F8F8F8"/>
		<Setter Property="GridLinesVisibility" Value="Horizontal"/>
		<Setter Property="HorizontalGridLinesBrush" Value="{StaticResource BorderBrush}"/>
		<Setter Property="VerticalGridLinesBrush" Value="Transparent"/>
		<Setter Property="HeadersVisibility" Value="Column"/>
		<Setter Property="CanUserAddRows" Value="False"/>
		<Setter Property="CanUserDeleteRows" Value="False"/>
		<Setter Property="CanUserReorderColumns" Value="False"/>
		<Setter Property="CanUserResizeRows" Value="False"/>
		<Setter Property="CanUserSortColumns" Value="True"/>
		<Setter Property="AutoGenerateColumns" Value="False"/>
		<Setter Property="SelectionMode" Value="Single"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="DataGrid">
					<Border Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							CornerRadius="8"
							SnapsToDevicePixels="True">
						<ScrollViewer x:Name="DG_ScrollViewer" Focusable="false"
									  CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
									  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
									  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}">
							<ScrollViewer.Template>
								<ControlTemplate TargetType="{x:Type ScrollViewer}">
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto"/>
											<ColumnDefinition Width="*"/>
											<ColumnDefinition Width="Auto"/>
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto"/>
											<RowDefinition Height="*"/>
											<RowDefinition Height="Auto"/>
										</Grid.RowDefinitions>
										<Button Command="{x:Static DataGrid.SelectAllCommand}"
												Width="{Binding CellsPresenterHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}"
												Focusable="false"/>
										<DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" />
										<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
										<ScrollBar x:Name="PART_VerticalScrollBar" Orientation="Vertical" Grid.Column="2" Grid.Row="1" />
										<Grid Grid.Column="1" Grid.Row="2">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}"/>
												<ColumnDefinition Width="*"/>
											</Grid.ColumnDefinitions>
											<ScrollBar x:Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Column="1"/>
										</Grid>
									</Grid>
								</ControlTemplate>
							</ScrollViewer.Template>
							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</ScrollViewer>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="DataGridColumnHeader">
		<Setter Property="Background" Value="{StaticResource BackgroundPrimaryBrush}"/>
		<Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
		<Setter Property="FontFamily" Value="{StaticResource BaseFont}"/>
		<Setter Property="FontSize" Value="12"/>
		<Setter Property="FontWeight" Value="SemiBold"/>
		<Setter Property="Padding" Value="10,8"/>
		<Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
		<Setter Property="BorderThickness" Value="0,0,1,1"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
	</Style>

	<Style TargetType="DataGridCell">
		<Setter Property="Padding" Value="10,8"/>
		<Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
		<Setter Property="BorderThickness" Value="0,0,1,0"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
		<Setter Property="FontFamily" Value="{StaticResource BaseFont}"/>
		<Setter Property="FontSize" Value="12"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Style.Triggers>
			<Trigger Property="IsSelected" Value="True">
				<Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
				<!-- Uses BaseRed for selection background -->
				<Setter Property="Foreground" Value="{StaticResource BackgroundCardBrush}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="CardBorderStyle" TargetType="Border">
		<Setter Property="Background" Value="{StaticResource BackgroundCardBrush}"/>
		<Setter Property="CornerRadius" Value="8"/>
		<Setter Property="Padding" Value="20"/>
		<Setter Property="Margin" Value="0,0,0,20"/>
	</Style>

</ResourceDictionary>